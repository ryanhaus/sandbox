#! /bin/python3
import os
import sys
import json
from dotenv import load_dotenv
from pyyoutube import Api 

def main():
    # process arguments and environment variables
    if len(sys.argv) != 2:
        print(f"Usage: {sys.argv[0]} [video ID]")
        return

    video_id = sys.argv[1]

    load_dotenv()
    YOUTUBE_API_KEY = os.getenv("YOUTUBE_API_KEY")
    
    # setup API and get video info
    api = Api(api_key=YOUTUBE_API_KEY)

    video = api.get_video_by_id(video_id=video_id)
    video_json = video.items[0].to_json()

    video = json.loads(video_json)

    video_title = video["snippet"]["title"]
    video_desc = video["snippet"]["description"]
    video_desc_lines = video_desc.split("\n")

    # try to parse videos that are auto-generated by youtube (common format)
    auto_generated = "Auto-generated by YouTube." in video_desc_lines

    if auto_generated:
        # title + artists & album will always be on the same line number
        title_artists = video_desc_lines[2].split("·")
        title = title_artists[0]
        artists = list(map(lambda x: x.strip(), title_artists[1:]))
        album = video_desc_lines[4]

        # trying to extract release year is a little more difficult, may have
        # to rely on copyright year
        year = None
        for line in video_desc_lines:
            if "Released on: " in line:
                release_date = line.split(" ")[2]
                year = release_date.split("-")[0]
                break

            elif "℗" in line:
                year = line.split(" ")[1]

        print(f"Title: {title}")
        print(f"Artist(s): {artists}")
        print(f"Album: {album}")
        print(f"Year: {year}")
    else:
        raise Exception("todo")

if __name__ == "__main__":
    main()
